import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import { dir } from 'i18next';
import './../../app/globals.css';
import { languages } from '../i18n/settings';
import Footer from '../layouts/footer/Footer';
import StoreProvider from '../../providers/StoreProvider';
import I18nProvider from '../../providers/I18nProvider';
import ThemeProvider from '../../providers/ThemeProvider';

export const generateStaticParams = async () => {
  return languages.map((lng) => ({ lng }));
};

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ lng: string }>;
}>) {
  const lng = (await params).lng;
  const namespaces = ['common'];
  const initialTranslations: Record<string, (key: string) => string> = {};

  return (
    <html lang={lng} dir={dir(lng)}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <main>{children}</main>
        <StoreProvider>
          <ThemeProvider>
            <I18nProvider
              initialLng={lng}
              namespaces={namespaces}
              initialTranslations={initialTranslations}
            >
              <Footer />
            </I18nProvider>
          </ThemeProvider>
        </StoreProvider>
      </body>
    </html>
  );
}
